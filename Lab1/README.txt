这里是日志，大家可以记录
2021/3/19--LHZ
成功通过线程减小了运行时间，但是并发还没有做到，之后解决线程间的临界区访问问题；
先完成一个100M内文件的数独问题
之后再拓展为任意大小
2021/3/19--LHZ
利用links函数“每次会将一个数独问题保留在类中”的特点，解决了多线程的临界问题
之后用solve()函数进行验证，答案无误
现在主要解决
1、如何进一步提升性能（考虑用cache算法，或者优化link算法，或者对主题部分进行优化）
2、如何读入任意大小的问题
2021/3/19--LHZ
和往届学长学姐进行对比后发现，算法还有很多不足，尤其需要解决粗粒度锁的问题
0.1s的瓶颈也是一个问题，如果能降低复杂度，可能需要再考虑考虑
2021/3/20--LHZ
经过将new操作提前分配，将解题时间下限减小至0.04s，可以算是一个突破了
2021/3/21--LHZ
收到SW算法的启示，使用缓存将结果暂存，并实现按顺序输出答案。
同时，并每隔一个固定大小的输入，就进行线程同步，实现任意大小的文件处理。
LAB1基础版本无误，并更新至master，此版本非linux。
2021/3/22--ZZQ
根据前面并发运算输出得到的结果进行验证，编写程序验证结果输出正确并且顺序正确，验证程序已上传
2021/3/24--LHZ
编写了makefile文件后，满足了实验要求。遇到了一些问题，因为虚拟机上的内存大小较小
所以一旦开的线程数较多，会出现segment fault，所以减小原始线程数。
之后优化可以参考CPU-affmity，sched_yield()。
2021/3/26--LHZ
两个线程读取可以使用锁+信号量实现
2021/3/27--ZJJ
对接受任意数字的输入进行了最基本的改写，但是还没有建立线程完成这项任务，还没有和之前的代码整合。
